name: Build and release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v6
        with:
          node-version: '>=22.21.0'
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            prebuilds/**/*
            dist/*
          if-no-files-found: error
          retention-days: 1

  test:
    needs: build
    strategy:
      matrix:
        target:
          - name: macos
            os: macos-latest
          - name: linux
            os: ubuntu-latest
          - name: windows
            os: windows-latest
    runs-on: ${{ matrix.target.os }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v6
        with:
          node-version: '>=22.21.0'
      - uses: actions/download-artifact@v5
        with:
          name: build
      - run: npm ci
      - run: npm test

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v6
        with:
          node-version: '>=22.21.0'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci --ignore-scripts
      - uses: actions/download-artifact@v5
        with:
          name: build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}